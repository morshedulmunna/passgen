name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
            archive-name: passgen-x86_64-apple-darwin
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            archive-name: passgen-x86_64-unknown-linux-gnu
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            archive-name: passgen-x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create release archive
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a ../../../${{ matrix.archive-name }}.zip passgen.exe
          else
            tar -czf ../../../${{ matrix.archive-name }}.tar.gz passgen
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.archive-name }}
          path: ${{ matrix.archive-name }}.*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./passgen-x86_64-apple-darwin/passgen-x86_64-apple-darwin.tar.gz
          asset_name: passgen-x86_64-apple-darwin.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./passgen-x86_64-unknown-linux-gnu/passgen-x86_64-unknown-linux-gnu.tar.gz
          asset_name: passgen-x86_64-unknown-linux-gnu.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./passgen-x86_64-pc-windows-msvc/passgen-x86_64-pc-windows-msvc.zip
          asset_name: passgen-x86_64-pc-windows-msvc.zip
          asset_content_type: application/zip
